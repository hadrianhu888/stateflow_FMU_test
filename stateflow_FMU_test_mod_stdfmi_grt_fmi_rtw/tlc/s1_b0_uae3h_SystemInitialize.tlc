%implements s1_b0_uae3h_SystemInitialize "C"

%function SystemInitialize(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%<SLibInsertAsyncTaskInitializeCode(system)>
%<SLibWriteMachineInitialize()>
%<SLibCG_TrackEO(5)>\
%<SLibCG_TrackEO(4)>\
%<SLibCG_TrackEO(3)>\
%<SLibCG_TrackEO(2)>\
%<SLibCG_TrackEO(1)>\
%<SLibCG_TrackEO(0)>\
/* SystemInitialize for Chart: '<Root>/State Flow FMU Test' */
stateflow_FMU_test_mod_stdfm_DW.is_active_c3_stateflow_FMU_test = 0U;
stateflow_FMU_test_mod_stdfm_DW.is_c3_stateflow_FMU_test_mod_st = stateflow_FM_IN_NO_ACTIVE_CHILD;
/* SystemInitialize for Outport: '<Root>/waitState' incorporates:
 *  Chart: '<Root>/State Flow FMU Test'
 */
stateflow_FMU_test_mod_stdfmi_Y.waitState = 0.0;
/* SystemInitialize for Outport: '<Root>/onState' incorporates:
 *  Chart: '<Root>/State Flow FMU Test'
 */
stateflow_FMU_test_mod_stdfmi_Y.onState = 0.0;
/* SystemInitialize for Outport: '<Root>/offState' incorporates:
 *  Chart: '<Root>/State Flow FMU Test'
 */
stateflow_FMU_test_mod_stdfmi_Y.offState = 0.0;
/* SystemInitialize for Outport: '<Root>/delayState' incorporates:
 *  Chart: '<Root>/State Flow FMU Test'
 */
stateflow_FMU_test_mod_stdfmi_Y.delayState = 0.0;
/* SystemInitialize for Outport: '<Root>/queueState' incorporates:
 *  Chart: '<Root>/State Flow FMU Test'
 */
stateflow_FMU_test_mod_stdfmi_Y.queueState = 0.0;
/* SystemInitialize for Outport: '<Root>/startState' incorporates:
 *  Chart: '<Root>/State Flow FMU Test'
 */
stateflow_FMU_test_mod_stdfmi_Y.startState = 0.0;
%<SLibInsertInitPeriodicCStatesFcn(system)>
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedSystemInitializeLocalVars", localVarDecl)>
%endfunction
%function SystemInitializeFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void SystemInitialize(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 0, fcnProtoType)>
%endfunction
